import { User, Booking, Property, sequelize } from "../app/models/index.js";
import 'dotenv/config';
import argon2 from "argon2";

// Seeding pour tester la fonctionnalit√© des tables et models

const bookingDate = (date) => date.toISOString().slice(0,10);

console.log('üå± Seeding ‚Ä¶')

// Cr√©ations de plusieurs utilisateurs
const user = await User.findOrCreate({
    username: "Toto",
    password: await argon2.hash('azerty')
});

const user2 = await User.findOrCreate({
    username: "Jean",
    password: await argon2.hash('12345')
});

// Cr√©ations de propri√©t√©s
const property = await Property.findOrCreate({ 
    name: "La villa du Nord", 
    description : "Situ√©e √† proximit√© des commerces et √† 5 min √† pied de la plage.", 
    price_per_night : 70.00 
});

const property2 = await Property.findOrCreate({
    name: "Les castors chanteurs",
    description: "Vue montagne, et randonn√©es √† proximit√©",
    price_per_night: 55.00
});

// Cr√©ation d'une r√©servation 

// R√©cup√©ration de la date actuelle
const startBookingDate = new Date();

// On d√©clare la date du d√©but de r√©servation
// ici 7 jours apr√®s la date actuelle
startBookingDate.setDate(startBookingDate.getDate() + 7);

const endBookingDate = new Date();

// On d√©clare la date √† laquelle on finit la r√©servation
// ici 7 jours apr√®s la date du d√©but
endBookingDate.setDate(endBookingDate.getDate() + 14);

await Booking.create({
    start_date : bookingDate(startBookingDate),
    end_date: bookingDate(endBookingDate),
    user_id: user.id,
    property_id: property.id,
});

console.log("Seeding termin√© ‚úÖ")

await sequelize.close();
